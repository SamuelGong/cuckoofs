---
- name: Install dependencies
  gather_facts: yes
  hosts: cuckooall
  tags: install-deps
  vars:
    unique_hosts: "{{ play_hosts | map('extract', hostvars) | groupby('ansible_host') | map('last') | map('first') | map(attribute='inventory_hostname') | list }}"
  tasks:
    - name: Allow Write To /etc/sudoers
      become: yes
      become_method: su
      file:
        path: /etc/sudoers
        mode: "u+w"
      when: inventory_hostname in unique_hosts
    - name: Allow Sudo With No Password
      become: yes
      become_method: su
      lineinfile:
        dest: /etc/sudoers
        regexp: "^{{ ansible_user }}"
        line: "{{ ansible_user }} ALL=(ALL:ALL) NOPASSWD: ALL"
      when: inventory_hostname in unique_hosts
    - name: Run installation dependencies script for Ubuntu 24.04
      become: yes
      become_method: su
      command: ./install-ubuntu24.04.sh
      args:
        chdir: "{{ [remote_src_dir, 'deploy', 'ansible'] | path_join }}"
      when:
        - inventory_hostname in unique_hosts
        - ansible_distribution == "Ubuntu"
        - ansible_distribution_version is version_compare('24.04', '==')
    - name: Set Environment Variables In ~/.bashrc
      lineinfile:
        dest: ~/.bashrc
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      loop:
        - regexp: '^export LD_LIBRARY_PATH='
          line: "export LD_LIBRARY_PATH={{ extra_ld_library_path }}:$LD_LIBRARY_PATH"
        - regexp: '^export PATH='
          line: "export PATH={{ extra_path }}:$PATH"
      when: inventory_hostname in unique_hosts


- name: Clone Code and Build
  gather_facts: yes
  hosts: cuckooall
  tags: build
  vars:
    unique_hosts: "{{ play_hosts | map('extract', hostvars) | groupby('ansible_host') | map('last') | map('first') | map(attribute='inventory_hostname') | list }}"
  tasks:
    - name: Clone Code
      git:
        repo: "{{ cuckoo_repo_url }}"
        version: "{{ cuckoo_repo_version }}"
        dest: "{{ remote_src_dir }}"
        update: yes
        force: yes
        recursive: yes
      when: inventory_hostname in unique_hosts
    - name: Apply Patch
      shell: ./patches/apply.sh
      args:
        chdir: "{{ remote_src_dir }}"
      when: inventory_hostname in unique_hosts
    - name: Build and install
      shell: ./build.sh && ./build.sh install
      args:
        chdir: "{{ remote_src_dir }}"
      environment:
        LD_LIBRARY_PATH: "{{ extra_ld_library_path }}:{{ ansible_env.LD_LIBRARY_PATH | default('') }}"
        PATH: "{{ extra_path }}:{{ ansible_env.PATH | default('') }}"
      when: inventory_hostname in unique_hosts


- name: Start metadata server
  gather_facts: yes
  hosts: cuckoometa
  tags: start
  vars:
    cn_localip: "{{ groups.cuckoocn | map('extract', hostvars, 'localip') | join(' ') }}"
    dn_localip: "{{ groups.cuckoodn | map('extract', hostvars, 'localip') | map('regex_replace', '^(.*)$', \"'\\1'\") | join(' ') }}"
    dn_worker_num: "{{ groups.cuckoodn | map('regex_replace', '^.*$', '1') | join(' ') }}"
  tasks:
    - name: Set Metadata Configuration
      lineinfile:
        dest: "{{ item.dest }}"
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        backrefs: yes
      loop:
        - dest: "{{ remote_src_dir }}/deploy/meta/cuckoo_meta_config.sh"
          regexp: '^localIp='
          line: "localIp='{{ localip }}'"
        - dest: "{{ remote_src_dir }}/deploy/meta/cuckoo_meta_config.sh"
          regexp: '^cnIp='
          line: "cnIp='{{ cn_localip }}'"
        - dest: "{{ remote_src_dir }}/deploy/meta/cuckoo_meta_config.sh"
          regexp: '^workerIpList='
          line: "workerIpList=({{ dn_localip }})"
        - dest: "{{ remote_src_dir }}/deploy/meta/cuckoo_meta_config.sh"
          regexp: '^workerNumList='
          line: "workerNumList=({{ dn_worker_num }})"
        - dest: "{{ remote_src_dir }}/deploy/meta/cuckoo_meta_start.sh"
          regexp: '^uniquePortPrefix='
          line: "uniquePortPrefix={{ cuckoo_server_port_prefix }}"
      when: inventory_hostname in groups['cuckoometa']
    - name: Start Dn
      shell: ./deploy/meta/cuckoo_meta_start.sh
      args:
        chdir: "{{ remote_src_dir }}"
      environment:
        LD_LIBRARY_PATH: "{{ extra_ld_library_path }}:{{ ansible_env.LD_LIBRARY_PATH | default('') }}"
        PATH: "{{ extra_path }}:{{ ansible_env.PATH | default('') }}"
      when: inventory_hostname in groups['cuckoodn']
    - name: Start Cn
      shell: ./deploy/meta/cuckoo_meta_start.sh
      args:
        chdir: "{{ remote_src_dir }}"
      environment:
        LD_LIBRARY_PATH: "{{ extra_ld_library_path }}:{{ ansible_env.LD_LIBRARY_PATH | default('') }}"
        PATH: "{{ extra_path }}:{{ ansible_env.PATH | default('') }}"
      when: inventory_hostname in groups['cuckoocn']

- name: Start client
  gather_facts: yes
  hosts: cuckooclient
  tags: start
  vars:
    cn_server_ip: "{{ groups.cuckoocn | map('extract', hostvars, 'localip') | join(' ') }}"
    all_client_ips_ports: "{{ groups.cuckooclient | map('extract', hostvars, 'localip') | map('regex_replace', '$', ':' ~ cuckoo_client_port) | map('regex_replace', '^(.*)$', '\"\\1\"') | join(', ') }}"
  tasks:
    - name: Get node id
      set_fact:
        node_id: "{{ play_hosts.index(inventory_hostname) }}"
    - name: Set Client Configuration
      lineinfile:
        dest: "{{ item.dest }}"
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        backrefs: yes
      loop:
        - dest: "{{ remote_src_dir }}/config/config.json"
          regexp: '^        "cuckoo_log_dir": '
          line: "        \"cuckoo_log_dir\": \"{{ cuckoo_client_log_path }}\","
        - dest: "{{ remote_src_dir }}/config/config.json"
          regexp: '^        "cuckoo_cache_root": '
          line: "        \"cuckoo_cache_root\": \"{{ cuckoo_client_cache_path }}_{{ ansible_user }}\","
        - dest: "{{ remote_src_dir }}/config/config.json"
          regexp: '^        "cuckoo_server_ip": '
          line: "        \"cuckoo_server_ip\": \"{{ cn_server_ip }}\","
        - dest: "{{ remote_src_dir }}/config/config.json"
          regexp: '^        "cuckoo_server_port": '
          line: "        \"cuckoo_server_port\": \"{{ cuckoo_server_port_prefix }}10\","
        - dest: "{{ remote_src_dir }}/config/config.json"
          regexp: '^        "cuckoo_node_id": '
          line: "        \"cuckoo_node_id\": {{ node_id }},"
        - dest: "{{ remote_src_dir }}/config/config.json"
          regexp: '^        "cuckoo_cluster_view": '
          line: "        \"cuckoo_cluster_view\": [{{ all_client_ips_ports }}],"
        - dest: "{{ remote_src_dir }}/config/config.json"
          regexp: '^        "cuckoo_mount_path": '
          line: "        \"cuckoo_mount_path\": \"{{ mount_path }}\","
        - dest: "{{ remote_src_dir }}/deploy/client/cuckoo_client_config.sh"
          regexp: '^CACHE_PATH='
          line: "CACHE_PATH=/tmp/cuckoo_cache_{{ ansible_user }}"
        - dest: "{{ remote_src_dir }}/deploy/client/cuckoo_client_config.sh"
          regexp: '^MNT_PATH='
          line: "MNT_PATH={{ mount_path }}"
        - dest: "{{ remote_src_dir }}/deploy/client/cuckoo_client_start.sh"
          regexp: '^(.*) -rpc_endpoint=0\.0\.0\.0:(\d+) (.*)$'
          line: '\1 -rpc_endpoint=0.0.0.0:{{ cuckoo_client_port }} \3'
    - name: Start client
      shell: ./deploy/client/cuckoo_client_start.sh
      args:
        chdir: "{{ remote_src_dir }}"
      environment:
        LD_LIBRARY_PATH: "{{ extra_ld_library_path }}:{{ ansible_env.LD_LIBRARY_PATH | default('') }}"
        PATH: "{{ extra_path }}:{{ ansible_env.PATH | default('') }}"
        CONFIG_FILE: "{{ remote_src_dir }}/config/config.json"


- name: Stop metadata and client
  gather_facts: yes
  hosts: cuckooall
  tags: stop
  tasks:
    - name: Stop Client
      shell: ./deploy/client/cuckoo_client_stop.sh
      args:
        chdir: "{{ remote_src_dir }}"
      environment:
        LD_LIBRARY_PATH: "{{ extra_ld_library_path }}:{{ ansible_env.LD_LIBRARY_PATH | default('') }}"
        PATH: "{{ extra_path }}:{{ ansible_env.PATH | default('') }}"
      when: inventory_hostname in groups['cuckooclient']
    - name: Stop Cn
      shell: ./deploy/meta/cuckoo_meta_stop.sh
      args:
        chdir: "{{ remote_src_dir }}"
      environment:
        LD_LIBRARY_PATH: "{{ extra_ld_library_path }}:{{ ansible_env.LD_LIBRARY_PATH | default('') }}"
        PATH: "{{ extra_path }}:{{ ansible_env.PATH | default('') }}"
      when: inventory_hostname in groups['cuckoocn']
    - name: Stop Dn
      shell: ./deploy/meta/cuckoo_meta_stop.sh
      args:
        chdir: "{{ remote_src_dir }}"
      environment:
        LD_LIBRARY_PATH: "{{ extra_ld_library_path }}:{{ ansible_env.LD_LIBRARY_PATH | default('') }}"
        PATH: "{{ extra_path }}:{{ ansible_env.PATH | default('') }}"
      when: inventory_hostname in groups['cuckoodn']

